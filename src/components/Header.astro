---
const navItems = [
  { href: "/", label: "Home" },
];

const currentPath = Astro.url.pathname;
---

<header class="header">
  <div class="container header-content">
    <a href="/" aria-label="Lukas Netolicky" class="site-name">
      Lukáš Netolický
    </a>

    <nav>
      <button
        class="mobile-menu-toggle"
        aria-label="Toggle menu"
        aria-expanded="false"
      >
        <span class="bar"></span>
        <span class="bar"></span>
        <span class="bar"></span>
      </button>

      <ul class="nav-links">
        {
          navItems.map((item) => (
            <li>
              <a
                href={item.href}
                class={currentPath === item.href ? "active" : ""}
                aria-current={currentPath === item.href ? "page" : undefined}
              >
                {item.label}
              </a>
            </li>
          ))
        }
      </ul>
    </nav>
  </div>
</header>

<style>
  .header {
    position: sticky;
    top: 0;
    background-color: var(--color-bg);
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
    z-index: 100;
    margin-bottom: var(--space-md);
  }

  .header-content {
    display: flex;
    justify-content: space-between;
    align-items: center;
    height: 70px;
  }

  .site-name {
    font-size: var(--font-xl);
    font-weight: var(--font-bold);
    color: var(--color-text);
    text-decoration: none;
    transition: color 0.2s ease;
  }

  .nav-links {
    display: flex;
    gap: var(--space-lg);
    list-style: none;
  }

  .nav-links a {
    font-size: var(--font-sm);
    color: var(--color-text-muted);
    text-decoration: none;
    font-weight: var(--font-medium);
    transition: color 0.2s ease;
    padding: var(--space-xs) var(--space-sm);
    border-radius: 4px;
  }

  .nav-links a:hover {
    color: var(--color-primary);
  }

  .nav-links a.active {
    color: var(--color-primary);
    background-color: var(--color-bg-muted);
  }

  .mobile-menu-toggle {
    display: none;
    flex-direction: column;
    justify-content: space-between;
    width: 30px;
    height: 21px;
    background: transparent;
    border: none;
    cursor: pointer;
    padding: 0;
    z-index: 10;
  }

  .bar {
    height: 3px;
    width: 100%;
    background-color: var(--color-text);
    border-radius: var(--space-xs);
    transition:
      transform 0.3s ease,
      opacity 0.2s ease;
    transform-origin: center;
  }

  .mobile-menu-toggle[aria-expanded="true"] .bar:nth-child(1) {
    transform: translateY(9px) rotate(45deg);
  }

  .mobile-menu-toggle[aria-expanded="true"] .bar:nth-child(2) {
    opacity: 0;
  }

  .mobile-menu-toggle[aria-expanded="true"] .bar:nth-child(3) {
    transform: translateY(-9px) rotate(-45deg);
  }

  @media (max-width: 768px) {
    .mobile-menu-toggle {
      display: flex;
    }

    .nav-links {
      position: fixed;
      top: 70px;
      right: -100%;
      flex-direction: column;
      background-color: var(--color-bg);
      width: 100%;
      text-align: center;
      transition: right 0.3s cubic-bezier(0.25, 1, 0.5, 1);
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
      padding: var(--space-lg) 0;
      gap: var(--space-md);
    }

    .nav-links.show {
      right: 0;
    }

    .nav-links li {
      opacity: 0;
      transform: translateY(10px);
      transition:
        opacity 0.3s ease,
        transform 0.3s ease;
      transition-delay: 0s;
    }

    .nav-links.show li {
      opacity: 1;
      transform: translateY(0);
    }

    .nav-links.show li:nth-child(1) {
      transition-delay: 0.1s;
    }
    .nav-links.show li:nth-child(2) {
      transition-delay: 0.2s;
    }
    .nav-links.show li:nth-child(3) {
      transition-delay: 0.3s;
    }
    .nav-links.show li:nth-child(4) {
      transition-delay: 0.4s;
    }
    .nav-links.show li:nth-child(5) {
      transition-delay: 0.5s;
    }
  }
</style>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const menuToggle = document.querySelector(".mobile-menu-toggle");
    const navLinks = document.querySelector(".nav-links");

    menuToggle?.addEventListener("click", () => {
      navLinks?.classList.toggle("show");
      const isExpanded = menuToggle.getAttribute("aria-expanded") === "true";
      menuToggle.setAttribute("aria-expanded", (!isExpanded).toString());
    });
  });
</script>
