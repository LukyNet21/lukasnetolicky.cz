---

---

<button id="theme-switcher" aria-label="Toggle theme">
  <svg
    xmlns="http://www.w3.org/2000/svg"
    width="24"
    height="24"
    viewBox="0 0 24 24"
    fill="none"
    stroke="currentColor"
    stroke-width="2"
    stroke-linecap="round"
    stroke-linejoin="round"
    class="sun-icon hidden"
    ><circle cx="12" cy="12" r="4"></circle><path d="M12 2v2"></path><path
      d="M12 20v2"></path><path d="m4.93 4.93 1.41 1.41"></path><path
      d="m17.66 17.66 1.41 1.41"></path><path d="M2 12h2"></path><path
      d="M20 12h2"></path><path d="m6.34 17.66-1.41 1.41"></path><path
      d="m19.07 4.93-1.41 1.41"></path></svg
  >
  <svg
    xmlns="http://www.w3.org/2000/svg"
    width="24"
    height="24"
    viewBox="0 0 24 24"
    fill="none"
    stroke="currentColor"
    stroke-width="2"
    stroke-linecap="round"
    stroke-linejoin="round"
    class="moon-icon"><path d="M12 3a6 6 0 0 0 9 9 9 9 0 1 1-9-9Z"></path></svg
  >
</button>

<script>
  document.addEventListener("astro:page-load", () => {
    const themeButton = document.getElementById("theme-switcher");

    function getInitialTheme() {
      const savedTheme = localStorage.getItem("theme");
      if (savedTheme) {
        return savedTheme;
      }
      if (window.matchMedia("(prefers-color-scheme: light)").matches) {
        return "light";
      }
      return "dark";
    }

    function applyTheme(theme: string) {
      document.body.classList.toggle("light", theme === "light");
      const sunIcon = themeButton?.querySelector(".sun-icon") as HTMLElement;
      const moonIcon = themeButton?.querySelector(".moon-icon") as HTMLElement;
      const lightMode = theme === "light";
      sunIcon.classList.toggle("hidden", lightMode);
      moonIcon.classList.toggle("hidden", !lightMode);
    }

    function toggleTheme() {
      const currentTheme = document.body.classList.contains("light")
        ? "light"
        : "dark";
      const newTheme = currentTheme === "light" ? "dark" : "light";
      localStorage.setItem("theme", newTheme);
      applyTheme(newTheme);
    }

    const initialTheme = getInitialTheme();
    applyTheme(initialTheme);

    if (!localStorage.getItem("theme")) {
      localStorage.setItem("theme", initialTheme);
    }
    themeButton?.addEventListener("click", toggleTheme);
    window
      .matchMedia("(prefers-color-scheme: light)")
      .addEventListener("change", (e) => {
        if (!localStorage.getItem("theme")) {
          const systemTheme = e.matches ? "light" : "dark";
          applyTheme(systemTheme);
        }
      });
  });
</script>

<style>
  #theme-switcher {
    background: none;
    border: none;
    color: var(--text-muted);
    cursor: pointer;
    transition:
      color 0.2s ease,
      transform 0.2s ease;
  }

  #theme-switcher:hover {
    color: var(--text);
    transform: scale(1.1);
  }

  .sun-icon,
  .moon-icon {
    transition: opacity 0.2s ease;
  }

  .hidden {
    display: none;
  }
</style>
